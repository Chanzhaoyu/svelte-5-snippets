{
  "SvelteKit Page Props": {
    "prefix": "sk-page",
    "body": [
      "import type { PageProps } from './\\$types';",
      "",
      "const { data }: PageProps = \\$props()",
      "${0}"
    ]
  },
  "SvelteKit Page Data": {
    "prefix": "sk-page-data",
    "body": [
      "import type { PageData, ActionData } from './\\$types';",
      "",
      "const { data, form }: { data: PageData, form: ActionData} = \\$props()",
      "${0}"
    ]
  },
  "SvelteKit Page Load": {
    "prefix": "sk-page-load",
    "body": [
      "import type { PageLoad } from './\\$types';",
      "",
      "export const load: PageLoad = async (${1:event}) => {",
      "\t$2",
      "\treturn {",
      "\t\t$0",
      "\t};",
      "};"
    ]
  },
  "SvelteKit Page params": {
    "prefix": "sk-page-params",
    "body": [
      "import { page } from '\\$app/state';",
      "",
      "const { ${1:id} } = \\$derived(page.params);"
    ]
  },
  "SvelteKit Page Error": {
    "prefix": "sk-page-error",
    "body": [
      "<script lang=\"ts\">",
      "import { page } from '\\$app/state';",
      "</script>",
      "",
      "<h1>{page.status}: {page.error.message}</h1>"
    ]
  },
  "SvelteKit Page Server Load": {
    "prefix": "sk-page-server-load",
    "body": [
      "import type { PageServerLoad } from './\\$types';",
      "",
      "export const load: PageServerLoad = async (${1:event}) => {",
      "\t$2",
      "\treturn {",
      "\t\t$0",
      "\t};",
      "};"
    ]
  },
  "SvelteKit Layout": {
    "prefix": "sk-layout",
    "body": [
      "<script lang=\"ts\">",
      "\timport type { LayoutProps } from './\\$types';",
      "",
      "\tconst { data, children }: LayoutProps = \\$props()",
      "</script>",
      "",
      "{@render children()}",
      ""
    ]
  },
  "SvelteKit Layout Load": {
    "prefix": "sk-layout-load",
    "body": [
      "import type { LayoutLoad } from './\\$types';",
      "",
      "export const load: LayoutLoad = async (${1:event}) => {",
      "\t$2",
      "\treturn {",
      "\t\t$0",
      "\t};",
      "};"
    ]
  },
  "SvelteKit: Layout Server Load": {
    "prefix": "sk-layout-server-load",
    "body": [
      "import type { LayoutServerLoad } from './\\$types';",
      "",
      "export const load: LayoutServerLoad = async (${1:event}) => {",
      "\t$2",
      "\treturn {",
      "\t\t$0",
      "\t};",
      "};"
    ]
  },
  "SvelteKit Page Actions": {
    "prefix": "sk-actions",
    "body": [
      "import type { Actions } from './\\$types';",
      "",
      "export const actions: Actions = {",
      "\tasync default() {",
      "\t\t$0",
      "\t}",
      "};"
    ]
  },
  "SvelteKit Hooks": {
    "prefix": "sk-hooks",
    "body": [
      "import type { Handle } from \"@sveltejs/kit\";",
      "",
      "export const handle: Handle = async ({ event, resolve }) => {",
      "\t$0",
      "\treturn resolve(event);",
      "};"
    ]
  },
  "SvelteKit Json": {
    "prefix": "sk-json",
    "body": [
      "json({ data: '' }, { status: 200 })"
    ]
  },
  "SvelteKit Error": {
    "prefix": "sk-error",
    "body": [
      "error(404, { message: \"Not found\" });"
    ]
  },
  "SvelteKit api GET": {
    "prefix": "sk-api-get",
    "body": [
      "import type { RequestHandler, RequestEvent } from './\\$types';",
      "import { json } from \"@sveltejs/kit\"",
      "",
      "export const GET: RequestHandler = (async ({ request }: RequestEvent) => {",
      "\treturn json({ message: 'GET' })",
      "});"
    ]
  },
  "SvelteKit api POST": {
    "prefix": "sk-api-post",
    "body": [
      "import type { RequestHandler, RequestEvent } from './\\$types';",
      "import { json } from \"@sveltejs/kit\"",
      "",
      "export const POST: RequestHandler = (async ({ request }: RequestEvent) => {",
      "\treturn json({ message: 'POST' })",
      "});"
    ]
  },
  "SvelteKit api PUT": {
    "prefix": "sk-api-put",
    "body": [
      "import type { RequestHandler, RequestEvent } from './\\$types';",
      "import { json } from \"@sveltejs/kit\"",
      "",
      "export const PUT: RequestHandler = (async ({ request }: RequestEvent) => {",
      "\treturn json({ message: 'PUT' })",
      "});"
    ]
  },
  "SvelteKit api DELETE": {
    "prefix": "sk-api-delete",
    "body": [
      "import type { RequestHandler, RequestEvent } from './\\$types';",
      "import { json } from \"@sveltejs/kit\"",
      "",
      "export const DELETE: RequestHandler = (async ({ request }: RequestEvent) => {",
      "\treturn json({ message: 'DELETE' })",
      "});"
    ]
  },
  "SvelteKit api PATCH": {
    "prefix": "sk-api-patch",
    "body": [
      "import type { RequestHandler, RequestEvent } from './\\$types';",
      "import { json } from \"@sveltejs/kit\"",
      "",
      "export const PATCH: RequestHandler = (async ({ request }: RequestEvent) => {",
      "\treturn json({ message: 'PATCH' })",
      "});"
    ]
  },
  "SvelteKit browser": {
    "prefix": "sk-browser",
    "body": [
      "import { browser } from \"\\$app/environment\";",
      "",
      "if (browser) {",
      "\t${0}",
      "}"
    ]
  },
  "SvelteKit env private": {
    "prefix": "sk-env-private",
    "body": [
      "import { env } from \"\\$env/dynamic/private\";",
      "",
      "${0}"
    ]
  },
  "SvelteKit env public": {
    "prefix": "sk-env-public",
    "body": [
      "import { env } from \"\\$env/static/public\";",
      "",
      "${0}"
    ]
  }
}